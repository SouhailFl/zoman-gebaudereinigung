===========================================
ZOMAN GEBÄUDEREINIGUNG - CLOUD DEPLOYMENT
PROJECT SAVEPOINT - Last Updated: 2025-10-23
===========================================

PROJECT CONTEXT:
- Bootcamp project (deadline: before December)
- Real company: Zoman Gebäudereinigung (uncle's cleaning company)
- Team: 2 fullstack devs + 2 IT technicians
- Current phase: Infrastructure setup (Terraform + Ansible + CI/CD)

TECH STACK:
- Frontend: Astro (static site) - COMPLETED
- Services: agent-service, email-service, website - COMPLETED
- Infrastructure: Azure VMs + Terraform + Ansible
- Monitoring: Prometheus + Grafana (pending)
- CI/CD: GitHub Actions (pending)

===========================================
PHASE 1: TERRAFORM INFRASTRUCTURE SETUP
===========================================

STATUS: ✅ COMPLETED - DEPLOYED TO FRANCE CENTRAL

COMPLETED TASKS:
[✓] 2025-10-21 - Created infrastructure/ folder structure
[✓] 2025-10-21 - Created Terraform files:
    - variables.tf (input variables)
    - provider.tf (Azure provider config)
    - main.tf (resource definitions)
    - outputs.tf (deployment outputs)
    - terraform.tfvars.example (template)
    - terraform.tfvars (actual config - gitignored)
[✓] 2025-10-21 - Configured .gitignore for Terraform secrets
[✓] 2025-10-21 - Set up SSH keys at C:\Users\souha\.ssh\id_rsa.pub
[✓] 2025-10-21 - Configured terraform.tfvars with:
    - Azure subscription: 5b976d4c-d66a-43e5-8602-5f7c371b8c19 (friend's student account)
    - Region: francecentral (germanywestcentral failed)
    - Environment: prod
    - VM count: 1 (Standard_B2s)
    - Allowed SSH IP: 196.206.110.120/32
[✓] 2025-10-22 - Ran terraform init
[✓] 2025-10-22 - Successfully deployed partial infrastructure (germanywestcentral)
[✓] 2025-10-23 - FULL DEPLOYMENT SUCCESSFUL (francecentral):
    ✅ Resource Group (rg-zoman-prod)
    ✅ Virtual Network (vnet-zoman-prod)
    ✅ Subnet (subnet-zoman-prod)
    ✅ Network Security Group with all rules
    ✅ Public IP: 4.233.113.237 (static)
    ✅ Network Interface (nic-zoman-prod-1)
    ✅ Key Vault (kv-zoman-prod)
    ✅ Storage Account (stzomanprod)
    ✅ Virtual Machine (vm-zoman-prod-1) - Ubuntu 20.04 LTS

RESOLUTION (2025-10-23):
✅ Issue resolved by switching from germanywestcentral to francecentral
✅ Full infrastructure deployed successfully
✅ All 9/9 resources created including VM
✅ VM is running and accessible

REGION ISSUE DETAILS:
- Original region: germanywestcentral ❌ Failed
- Working region: francecentral ✅ Success
- Root cause: Region capacity or quota limitations in Germany West Central
- Solution: Changed azure_region in terraform.tfvars to "francecentral"

DEPLOYMENT CONFIRMATION:
[✓] VM deployed and running
[✓] SSH access verified
[✓] All networking configured
[✓] Security rules active

NEXT IMMEDIATE STEPS:
1. Install Docker and Docker Compose on VM
2. Set up Ansible inventory with new VM IP
3. Begin Phase 2: Application deployment

INFRASTRUCTURE DETAILS:
Resources deployed (9/9) - COMPLETE:
- 1x Resource Group ✅
- 1x Virtual Network ✅
- 1x Subnet ✅
- 1x Network Security Group ✅
- 1x Public IP (4.233.113.237) ✅
- 1x Network Interface ✅
- 1x Key Vault ✅
- 1x Storage Account ✅
- 1x VM (Ubuntu 20.04 LTS, Standard_B2s, France Central) ✅

===========================================
PHASE 2: ANSIBLE CONFIGURATION (READY TO START)
===========================================

VM DEPLOYMENT COMPLETE - READY FOR ANSIBLE:
✅ VM is running in France Central
✅ SSH access confirmed
✅ Public IP assigned

NEXT STEPS:
[ ] Create Ansible inventory file with VM IP
[ ] Create Ansible playbooks for:
    - Docker installation
    - Docker Compose deployment
    - Prometheus/Grafana setup
    - SSL certificate (Let's Encrypt)
    - Firewall configuration
[ ] Test Ansible connectivity to VM
[ ] Deploy Docker and Docker Compose
[ ] Deploy application containers

===========================================
PHASE 3: CI/CD PIPELINE (PENDING)
===========================================

NEXT STEPS:
[ ] Create .github/workflows/ for:
    - Building Docker images (GitHub Actions)
    - Pushing to Azure Container Registry
    - Automated deployment via Ansible
[ ] Configure GitHub Secrets for Azure authentication
[ ] Test CI/CD pipeline with dummy commit

===========================================
PHASE 4: MONITORING (PENDING)
===========================================

NEXT STEPS:
[ ] Deploy Prometheus + Grafana via Ansible
[ ] Configure service metrics endpoints
[ ] Create dashboards for:
    - CPU/Memory usage
    - Request rates
    - Error rates
[ ] Set up alerting rules

===========================================
KNOWN DECISIONS & CONSTRAINTS
===========================================

- Using friend's Azure student account (not personal account)
- Scale: <1000 visitors/month (small workload)
- Budget: Student subscription limits
- VM Size: Standard_B2s (2 vCPU, 4GB RAM)
- OS: Ubuntu 20.04 LTS
- Skipping: Kubernetes, Teleport, NoIP, Kafka (unnecessary complexity)
- TrueNAS Scale: On hold until production stable
- Focus: Simple, working production deployment

===========================================
TROUBLESHOOTING NOTES
===========================================

REGION AVAILABILITY ISSUE - RESOLVED (2025-10-23):
- Original region: germanywestcentral ❌ Failed
- Issue: VM creation failed with capacity/availability errors
- Solution: Switched to francecentral region ✅
- Result: Full deployment successful

Verified Working Configuration:
- Region: francecentral ✅ CONFIRMED WORKING
- VM Size: Standard_B2s (2 vCPU, 4GB RAM) ✅
- OS: Ubuntu 20.04 LTS ✅
- SSH keys: Generated and configured correctly ✅
- IP whitelisting: 196.206.110.120/32 (working) ✅

Key Takeaway: Always have backup regions ready when deploying Azure resources. France Central had better availability than Germany West Central.

===========================================
IMPORTANT FILES & LOCATIONS
===========================================

Key Files:
- C:\Users\souha\zg\zoman-gebaudereinigung\infrastructure\terraform.tfvars (GITIGNORED)
- C:\Users\souha\.ssh\id_rsa.pub (SSH public key)
- C:\Users\souha\zg\zoman-gebaudereinigung\docker-compose.yml (local dev setup)
- C:\Users\souha\zg\zoman-gebaudereinigung\INFRASTRUCTURE_HANDOFF.md (Friend's instructions)

Repository Structure:
zoman-gebaudereinigung/
├── infrastructure/          # Terraform files
│   ├── terraform.tfstate    # Has partial deployment
│   └── terraform.tfvars     # Update with friend's config
├── website/                 # Astro frontend
├── agent-service/          # AI chat microservice
├── email-service/          # Email microservice
├── .github/workflows/      # CI/CD (to be created)
├── docker-compose.yml      # Local dev environment
├── claude_savepoint.txt    # This file
└── INFRASTRUCTURE_HANDOFF.md  # Friend's guide

===========================================
TERRAFORM STATE INFO
===========================================

Current State File: infrastructure/terraform.tfstate
- Serial: 18
- Terraform Version: 1.13.4
- Lineage: 07630a34-92ad-1ee6-7540-2519e1e021a0

Deployed Resources (8):
1. azurerm_resource_group.zoman
2. azurerm_virtual_network.zoman
3. azurerm_subnet.zoman
4. azurerm_network_security_group.zoman
5. azurerm_network_security_rule.allow_ssh
6. azurerm_network_security_rule.allow_http
7. azurerm_network_security_rule.allow_https
8. azurerm_network_security_rule.allow_prometheus
9. azurerm_network_security_rule.allow_grafana
10. azurerm_public_ip.zoman[0]
11. azurerm_network_interface.zoman[0]
12. azurerm_key_vault.zoman
13. azurerm_storage_account.zoman

All Resources Deployed: ✅ 13/13 COMPLETE

Important Outputs:
- vm_public_ips: ["4.233.113.237"]
- vm_private_ips: ["10.0.1.4"]
- resource_group_name: "rg-zoman-prod"
- key_vault_name: "kv-zoman-prod"
- storage_account_name: "stzomanprod"

===========================================
NEXT CONVERSATION CHECKLIST
===========================================

When starting a new chat, tell Claude to:
1. Read this file first
2. ✅ Phase 1 (Terraform) is COMPLETE
3. Ready to proceed with Phase 2 (Ansible configuration)
4. VM is deployed and running in France Central
5. Next: Install Docker, configure Ansible, deploy services
6. Update this file after any changes

===========================================
DEPLOYMENT COMPLETION CHECKLIST
===========================================

Phase 1 (Terraform) - COMPLETED:
[✓] Git pull latest changes
[✓] Install Terraform 1.13.4+
[✓] Install Azure CLI
[✓] Login to Azure (az login)
[✓] Set subscription: 5b976d4c-d66a-43e5-8602-5f7c371b8c19
[✓] Update terraform.tfvars (changed region to francecentral)
[✓] Run terraform init
[✓] Run terraform plan
[✓] Run terraform apply - SUCCESS
[✓] Test SSH: ssh -i ~/.ssh/id_rsa zomanadmin@4.233.113.237
[✓] Document working region (francecentral)

Phase 2 (Ansible) - READY TO START:
[ ] Create Ansible inventory file with VM IP
[ ] Install Docker on VM
[ ] Install Docker Compose on VM
[ ] Deploy application services
[ ] Configure SSL/TLS certificates
[ ] Set up monitoring (Prometheus/Grafana)

===========================================
CRITICAL REMINDERS
===========================================

1. DO NOT run 'terraform destroy' - we have working resources
2. DO update your IP address in terraform.tfvars for SSH access
3. DO backup terraform.tfstate before major changes
4. DO test SSH immediately after VM deployment
5. DO document the working configuration (region, VM size)
6. DO keep the subscription ID the same (student account)
7. DO verify with 'terraform plan' before 'terraform apply'
8. DO reach out if stuck (don't struggle alone)

===========================================
SUCCESS METRICS
===========================================

Phase 1 Complete: ✅
[✓] Resource group created
[✓] Networking infrastructure deployed
[✓] Security rules configured
[✓] Public IP allocated
[✓] VM deployed and running (France Central)
[✓] SSH access verified
[ ] Docker installed on VM ← NEXT STEP
[ ] Application containers deployed

Timeline:
- Started: 2025-10-21
- Network deployed: 2025-10-22
- VM deployment: 2025-10-23 ✅ COMPLETE (France Central)
- Phase 1 completion: 2025-10-23 ✅
- Phase 2 start: 2025-10-23 (Docker + Ansible)

===========================================
END OF SAVEPOINT
===========================================
