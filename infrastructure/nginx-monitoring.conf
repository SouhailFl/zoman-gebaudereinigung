# Nginx configuration for monitoring services with HTTPS
# Location: /etc/nginx/sites-available/monitoring
# Enable with: sudo ln -s /etc/nginx/sites-available/monitoring /etc/nginx/sites-enabled/

# Grafana - HTTPS with subdomain
server {
    listen 443 ssl http2;
    server_name grafana.zoman.switzerlandnorth.cloudapp.azure.com;

    # SSL certificates (to be obtained with certbot)
    ssl_certificate /etc/letsencrypt/live/grafana.zoman.switzerlandnorth.cloudapp.azure.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grafana.zoman.switzerlandnorth.cloudapp.azure.com/privkey.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/grafana-access.log;
    error_log /var/log/nginx/grafana-error.log;

    # Proxy to Grafana service in Kubernetes
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for live updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Redirect HTTP to HTTPS for Grafana
server {
    listen 80;
    server_name grafana.zoman.switzerlandnorth.cloudapp.azure.com;
    return 301 https://$server_name$request_uri;
}

# Prometheus - HTTPS with subdomain and basic auth
server {
    listen 443 ssl http2;
    server_name prometheus.zoman.switzerlandnorth.cloudapp.azure.com;

    # SSL certificates (to be obtained with certbot)
    ssl_certificate /etc/letsencrypt/live/prometheus.zoman.switzerlandnorth.cloudapp.azure.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prometheus.zoman.switzerlandnorth.cloudapp.azure.com/privkey.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/prometheus-access.log;
    error_log /var/log/nginx/prometheus-error.log;

    # Basic authentication
    auth_basic "Prometheus Monitoring";
    auth_basic_user_file /etc/nginx/.htpasswd-prometheus;

    # Proxy to Prometheus service in Kubernetes
    location / {
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Redirect HTTP to HTTPS for Prometheus
server {
    listen 80;
    server_name prometheus.zoman.switzerlandnorth.cloudapp.azure.com;
    return 301 https://$server_name$request_uri;
}
