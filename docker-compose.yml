version: '3.8'

services:
  # Website (Static Frontend)
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
      args:
        - PUBLIC_HCAPTCHA_SITE_KEY=${PUBLIC_HCAPTCHA_SITE_KEY}
        - PUBLIC_EMAIL_SERVICE_URL=${PUBLIC_EMAIL_SERVICE_URL}
    container_name: zoman-website
    ports:
      - "8080:80"
    depends_on:
      - email-service
      - agent-service
    networks:
      - zoman-network
    restart: unless-stopped

  # Email Microservice
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: zoman-email-service
    ports:
      - "3001:3001"
    environment:
      - MAILTRAP_HOST=${MAILTRAP_HOST}
      - MAILTRAP_PORT=${MAILTRAP_PORT}
      - MAILTRAP_USER=${MAILTRAP_USER}
      - MAILTRAP_PASS=${MAILTRAP_PASS}
      - HCAPTCHA_SECRET_KEY=${HCAPTCHA_SECRET_KEY}
      - PORT=3001
    networks:
      - zoman-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Agent Microservice
  agent-service:
    build:
      context: ./agent-service
      dockerfile: Dockerfile
    container_name: zoman-agent-service
    ports:
      - "3002:3002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PORT=3002
    networks:
      - zoman-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  zoman-network:
    driver: bridge